// Code generated by protoapi:go; DO NOT EDIT.

package searchsvr

import (
	"github.com/labstack/echo"
	"github.com/yoozoo/protoapi/protoapigo"
)

// SearchService is the interface contains all the controllers
type SearchService interface {
	Serach(c echo.Context, req *SearchReq) (resp *SearchResponse, bizError *SearchError, err error)
	// Serach(echo.Context, *SearchReq) (*SearchResponse, *SearchError)
}

func _serach_Handler(srv SearchService) echo.HandlerFunc {
	return func(c echo.Context) (err error) {
		req := new(SearchReq)

		if err = c.Bind(req); err != nil {

			return c.JSON(500, err)

		}
		/*

		 */
		resp, bizError, err := srv.Serach(c, req)
		if err != nil {

			return c.String(500, err.Error())
		}
		if bizError != nil {
			return c.JSON(400, bizError)
		}

		return c.JSON(200, resp)
	}
}

// RegisterSearchService is used to bind routers
func RegisterSearchService(e *echo.Echo, srv SearchService) {
	// switch to strict JSONAPIBinder, if using echo's DefaultBinder
	if _, ok := e.Binder.(*echo.DefaultBinder); ok {
		e.Binder = new(protoapigo.JSONAPIBinder)
	}
	e.POST("/SearchService.serach", _serach_Handler(srv))
}
